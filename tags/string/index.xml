<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>string on subond&#39;s blog</title>
    <link>http://www.subond.com/tags/string/</link>
    <description>Recent content in string on subond&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 23 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://www.subond.com/tags/string/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go字符串拼接性能对比</title>
      <link>http://www.subond.com/post/006_golang_string_join/</link>
      <pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/006_golang_string_join/</guid>
      <description>Go字符串拼接性能对比 Go 语言中提供了基础数据结构类型 string，在实际使用中我们经常遇到将字符串拼接的问题，即需要将多个字符串拼接在一起，形成新的字符串。那么 go 语言有哪些方式可以完成字符串拼接，以及它们的性能如何，我们一起研究下。
1. 操作符+ 最简单的一种方式就是通过操作符+来完成拼接，例如下面这段小代码，字符串 s3 就是直接将s1和s2拼接在一起，其值等于foobar
1 2 3 s1 := &amp;#34;foo&amp;#34; s2 := &amp;#34;bar&amp;#34; s3 := s1 + s2 2. 通过strings.join函数 strings 库中的strings.join 函数可以拼接多个字符串，并且还能指定字符串之间的分隔符。</description>
    </item>
    
  </channel>
</rss>
