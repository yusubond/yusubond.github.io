<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vagrant on subond</title>
    <link>http://www.subond.com/tags/vagrant/</link>
    <description>Recent content in vagrant on subond</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 15 May 2017 00:00:00 +0000</lastBuildDate><atom:link href="http://www.subond.com/tags/vagrant/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vagrant使用案例</title>
      <link>http://www.subond.com/post/vagrant_usage/</link>
      <pubDate>Mon, 15 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/vagrant_usage/</guid>
      <description>1.单机配置 配置一个centos7系统，要求使用私有网络地址192.168.10.10，hostname为dbserver。 Vagrant.configure(&amp;#34;2&amp;#34;) do |dbserver| dbserver.vm.box = &amp;#34;centos/7&amp;#34; dbserver.vm.network &amp;#34;private_network&amp;#34;, ip: &amp;#34;192.168.10.10&amp;#34; dbserver.vm.hostname = &amp;#34;dbserver&amp;#34; end 需要说明的是：使用私有地址，vm的私有ip只能在各vm间互访，而不能访问Internet，即HOST_ONLY模式；使用公有地址，vm的公有地址将于主机某个网卡(启动vm时需指定)的地址同一网段，vm能够使用该地址访问Internet。
配置一个ubuntu xenial64系统，并将工程目录下的data目录同步到vm中，目录为/vagrant/project_data；同时将vm的80端口映射到主机的8080端口。 Vagrant.configure(&amp;#34;2&amp;#34;) do |ubuntu16| ubuntu16.vm.box = &amp;#34;ubuntu/xenial64&amp;#34; ubuntu16.vm.network &amp;#34;forwarded_port&amp;#34;, guest: 80, host: 8080 ubuntu16.vm.synced_folder &amp;#34;/Users/subond/UCloud/VHost/data&amp;#34;, &amp;#34;/project_data&amp;#34; end 需要说明的是：指定同步文件时，第一个参数既可以当前工程目录的相对目录，也可以是主机上的绝对路径；第二个参数是vm中的绝对路径。默认情况下，当前工程目录下的文件将同步至vm中的/vagrant目录下。
配置一个centos7系统，要求设置vm的名字为foobar,内存大小为512M。 Vagrant.configure(&amp;#34;2&amp;#34;) do |centos| centos.vm.box = &amp;#34;centos/7&amp;#34; centos.vm.provider &amp;#34;virtualbox&amp;#34; do |vm| vm.customize [&amp;#34;modifyvm&amp;#34;, :id, &amp;#34;--name&amp;#34;, &amp;#34;foobar&amp;#34;, &amp;#34;--memory&amp;#34;, &amp;#34;512&amp;#34;] end end 2.分布式系统配置 创建两个主机，一个做服务端，hostname为server,一个做客户端，hostname为client，两个虚拟均设置私有网络，并配置dhcp服务。 Vagrant.configure(&amp;#34;2&amp;#34;) do |subond| subond.vm.box = &amp;#34;centos/7&amp;#34; subond.vm.define &amp;#34;server&amp;#34; do |server| server.vm.network &amp;#34;private_network&amp;#34;, type: &amp;#34;dhcp&amp;#34; server.</description>
    </item>
    
    <item>
      <title>Vagrant的快速使用</title>
      <link>http://www.subond.com/post/vagrant_startup/</link>
      <pubDate>Wed, 10 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/vagrant_startup/</guid>
      <description>Vagrant是为了方便的实现虚拟化环境而设计的，使用Ruby语言开发，基于VirtualBox等虚拟机管理软件的接口，提供了一个可配置、轻量级的便携式虚拟开发环境。使用Vagrant可以很方便的就建立起来一个虚拟环境，而且可以模拟多台虚拟机，形成分布式系统。
其次，Vagrant还可以实现文件共享，即用于主机和虚拟之间共享文件，方便开发人员在主机上写程序，再往虚拟里拷贝的麻烦。而且，Vagrant的package功能还可以将完整的开发环境进行打包，供其他人使用，极大地提高了工作效率。
1.Vagrant安装 Vagrant只是一个方便创建，管理虚拟的便携式工具，底层支持由VirtualBox、VMware等虚拟机系统支持。本文以VirtualBox为例，主机系统为Mac OSX。
VirtualBox安装 这是Virtual官网链接https://www.virtualbox.org/wiki/Downloads，可以依据自己的系统选择合适的安装包进行安装。
Vagrant安装 Vagrant官网https://www.vagrantup.com/downloads.html，同样需要依据自己的系统选择合适的安装包进行安装。
2.Vagrant配置 Vagrant配置主要在Vagrantfile文件中，通过vagrant init命令可以获得。
$ mkdir MyHost $ cd MyHost $ vagrant init 在MyHost文件夹下就会出现Vagrantfile文件，该文件是配置虚机的主要的文件。例如，我们想要创建一个Ubuntu Xenial 64位的虚机，并设置虚机的hostname为ubuntu64，则Vagrantfile中进行如下修改：
config.vm.box = &amp;#34;ubuntu/xenial64&amp;#34; config.vm.hostname = &amp;#34;ubuntu64&amp;#34; 3.启动虚拟 在MyHost目录下，通过命令vagrant up即可启动在Vagrantfile文件中配置的虚拟。
$ vagrant up # 进入虚拟 $ vagrant ssh 4.Vagrantfile详解 语言版本 Vagrant.configure(&amp;#34;2&amp;#34;) do |config| 其中&amp;quot;2&amp;quot;指定Vagrantfile所使用的语言版本，一般为2。
box相关 指定创建虚机vm所需的box
config.vm.box = &amp;#34;ubuntu/xenial64&amp;#34; 设置vm的hostname
config.vm.hostname = &amp;#34;ubuntu64&amp;#34; 设置vm的网络，如果是设置私有网络，需指定ip地址；如果设置公有网络，则不需要。
# 设置私有网络 config.vm.network &amp;#34;private_network&amp;#34;, ip: &amp;#34;192.168.33.10&amp;#34; # 设置公有网络 config.vm.network &amp;#34;public_network&amp;#34; # 设置端口映射，即vm80端口映射到主机8080端口 config.vm.network &amp;#34;forwarded_port&amp;#34;, guest: 80, host: 8080 文件同步 将主机的文件(或目录)挂载到vm中，实现文件同步。</description>
    </item>
    
  </channel>
</rss>
