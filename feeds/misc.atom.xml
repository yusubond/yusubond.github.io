<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Milestone - misc</title><link href="http://localhost:8005/" rel="alternate"></link><link href="http://localhost:8005/feeds/misc.atom.xml" rel="self"></link><id>http://localhost:8005/</id><updated>2016-05-14T00:00:00+08:00</updated><entry><title>Socket编程之基础篇</title><link href="http://localhost:8005/pages/2016/05/14/socket-bian-cheng-ji-chu.html" rel="alternate"></link><published>2016-05-14T00:00:00+08:00</published><updated>2016-05-14T00:00:00+08:00</updated><author><name>subond</name></author><id>tag:localhost,2016-05-14:/pages/2016/05/14/socket-bian-cheng-ji-chu.html</id><summary type="html">&lt;p&gt;Socket，又称为“套接字”，是进程间进行通信的一种方式，即通过网络库的API函数实现分布在不同主机的相关进程间的数据交换。在TCP/IP网络应用中，通信的两个进程的主要模式是客户/服务器模式， 即客户向服务器发送服务请求，服务器接收到请求后，提供相应的服务。Socket编程接口是指从顶上三层（网际协议的应用层）进入传输层的接口，涉及两个方向上的传递：从进程到内核和从内核到进程，如图1-1所示。&lt;/p&gt;</summary><content type="html"></content><category term="socket"></category><category term="newtork programming"></category></entry></feed>