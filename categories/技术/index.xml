<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术 on 凯文的个人博客</title>
    <link>http://www.subond.com/categories/%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 技术 on 凯文的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 24 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://www.subond.com/categories/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>深入理解Go调度器：初识GMP模型</title>
      <link>http://www.subond.com/post/2023-07-24_golang_gpm/</link>
      <pubDate>Mon, 24 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2023-07-24_golang_gpm/</guid>
      <description>认识GMP模型 本文主要介绍当前runtime中调度器的 GMP 模型</description>
    </item>
    
    <item>
      <title>聊聊网络卸载技术</title>
      <link>http://www.subond.com/post/2023-06-21_offload/</link>
      <pubDate>Wed, 21 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2023-06-21_offload/</guid>
      <description>0. 网络加速的起源 传统数据中心基于冯诺依曼架构，所有的数据都需</description>
    </item>
    
    <item>
      <title>内存管理：TCMalloc之魂</title>
      <link>http://www.subond.com/post/2023-03-21_tcmalloc_zhengli/</link>
      <pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2023-03-21_tcmalloc_zhengli/</guid>
      <description>TCMalloc 是 Google 开发的内存分配器，在不少项目中都有使用，Go 中就使用了</description>
    </item>
    
    <item>
      <title>Go defer如何调用</title>
      <link>http://www.subond.com/post/2022-09-26_golang_defer/</link>
      <pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2022-09-26_golang_defer/</guid>
      <description>1、在defer语句声明时进行估值 我们都知道go中defer</description>
    </item>
    
    <item>
      <title>Go逃逸分析与性能</title>
      <link>http://www.subond.com/post/2022-09-15_golang_stack_or_heap/</link>
      <pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2022-09-15_golang_stack_or_heap/</guid>
      <description>1、变量与内存 通常每种编程语言都有自己的内存模型，每个变量，</description>
    </item>
    
    <item>
      <title>Go Slice性能与技巧</title>
      <link>http://www.subond.com/post/2022-09-13_golang_array_and_slice/</link>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2022-09-13_golang_array_and_slice/</guid>
      <description>Go Slice性能与技巧 slice是Go语言中一个重要的数据类</description>
    </item>
    
    <item>
      <title>Go 空struct的使用技巧</title>
      <link>http://www.subond.com/post/2022-09-03_golang_struct_skill/</link>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2022-09-03_golang_struct_skill/</guid>
      <description>1、空struct{}不占用内存空间 Go语言中，使用unsa</description>
    </item>
    
    <item>
      <title>Go Struct内存对齐</title>
      <link>http://www.subond.com/post/2022-09-07_golang_struct_memory_alignment/</link>
      <pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2022-09-07_golang_struct_memory_alignment/</guid>
      <description>1 为什么需要考虑内存对齐 CPU访问内存时，并不是逐个字节访问</description>
    </item>
    
    <item>
      <title>Go字符串拼接性能对比</title>
      <link>http://www.subond.com/post/2022-06-17_golang_string_join/</link>
      <pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2022-06-17_golang_string_join/</guid>
      <description>Go 语言中提供了基础数据结构类型 string，在实际使用中我们</description>
    </item>
    
    <item>
      <title>Go 互斥锁与读写锁</title>
      <link>http://www.subond.com/post/2022-06-07_golang_mutex/</link>
      <pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2022-06-07_golang_mutex/</guid>
      <description>Go 语言标准包 sync 中提供了两种锁，互斥锁 Mutex 和读写锁 RWMutex ，那两者有什</description>
    </item>
    
    <item>
      <title>Vagrant使用案例</title>
      <link>http://www.subond.com/post/2017-05_15_vagrant_usage/</link>
      <pubDate>Mon, 15 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2017-05_15_vagrant_usage/</guid>
      <description>1.单机配置 配置一个centos7系统，要求使用私有网络地址</description>
    </item>
    
    <item>
      <title>Vagrant的快速使用</title>
      <link>http://www.subond.com/post/2017-05-10_vagrant_startup/</link>
      <pubDate>Wed, 10 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2017-05-10_vagrant_startup/</guid>
      <description>Vagrant是为了方便的实现虚拟化环境而设计的，使用Rub</description>
    </item>
    
    <item>
      <title>Docker进阶：服务配置</title>
      <link>http://www.subond.com/post/2017-05-01_docker_swarm5/</link>
      <pubDate>Mon, 01 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2017-05-01_docker_swarm5/</guid>
      <description>当使用Docker Swarm模式时，我们可以通过命令dock</description>
    </item>
    
    <item>
      <title>Docker进阶：以Swarm模式运行Docker引擎</title>
      <link>http://www.subond.com/post/2017-04-28_docker_swarm4/</link>
      <pubDate>Fri, 28 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2017-04-28_docker_swarm4/</guid>
      <description>Docker Engine 1.12及后续版本支持Swarm模式，我们可以通过以下两</description>
    </item>
    
    <item>
      <title>Docker集群：工作原理</title>
      <link>http://www.subond.com/post/2017-04-26_docker_swarm3/</link>
      <pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2017-04-26_docker_swarm3/</guid>
      <description>一个Swarm是一组Docker引擎或节点的集群，并在这个集</description>
    </item>
    
    <item>
      <title>Docker集群：服务回滚</title>
      <link>http://www.subond.com/post/2017-04-24_docker_swarm2/</link>
      <pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2017-04-24_docker_swarm2/</guid>
      <description>一个Swarm是一组Docker引擎或节点的集群，并在这个集</description>
    </item>
    
    <item>
      <title>Docker技术：快速上手教程</title>
      <link>http://www.subond.com/post/2017-04-20_docker_quickstart/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2017-04-20_docker_quickstart/</guid>
      <description>本文目录： 1.构建容器-Containers 2.组合服务-C</description>
    </item>
    
    <item>
      <title>Docker技术：Dockerfile的定义与使用</title>
      <link>http://www.subond.com/post/2017-04-18_docker_dockerfile/</link>
      <pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2017-04-18_docker_dockerfile/</guid>
      <description>本文目录： Dockerfile的使用 Dockerfile指令</description>
    </item>
    
    <item>
      <title>Docker技术：Docker系统架构</title>
      <link>http://www.subond.com/post/2017-04-16_docker_docker_arch/</link>
      <pubDate>Sun, 16 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2017-04-16_docker_docker_arch/</guid>
      <description>本文目录： [Docker Engine](#Docker Engine) Docker交付内容 Docker系统架构 Docker Engine</description>
    </item>
    
    <item>
      <title>Docker技术：认识Docker</title>
      <link>http://www.subond.com/post/2017-04-14_docker_docker/</link>
      <pubDate>Fri, 14 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2017-04-14_docker_docker/</guid>
      <description>Docker和传统虚拟化方式的不同如下图所示。传统虚拟化技术</description>
    </item>
    
    <item>
      <title>深入理解Paxos算法</title>
      <link>http://www.subond.com/post/2017-03-21_learn_paxos/</link>
      <pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2017-03-21_learn_paxos/</guid>
      <description>1.Paxos算法 Paxos算法是Leslie Lanmpor</description>
    </item>
    
    <item>
      <title>Linux中的线程管理</title>
      <link>http://www.subond.com/post/2016-06-19_linux_process2/</link>
      <pubDate>Sun, 19 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2016-06-19_linux_process2/</guid>
      <description>1.线程 线程是CPU使用的基本单元，由线程ID，程序计数器，</description>
    </item>
    
    <item>
      <title>Linux中的线程函数</title>
      <link>http://www.subond.com/post/2016-06-14_linux_pthread/</link>
      <pubDate>Tue, 14 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2016-06-14_linux_pthread/</guid>
      <description>线程是CPU使用的基本单元，由线程ID，程序计数器，寄存器和</description>
    </item>
    
    <item>
      <title>Git学习手记</title>
      <link>http://www.subond.com/post/2016-04-29_gitxuexi/</link>
      <pubDate>Fri, 29 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/2016-04-29_gitxuexi/</guid>
      <description>指令介绍 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 $</description>
    </item>
    
  </channel>
</rss>
