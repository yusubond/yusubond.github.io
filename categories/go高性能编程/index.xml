<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go高性能编程 on subond&#39;s blog</title>
    <link>http://www.subond.com/categories/go%E9%AB%98%E6%80%A7%E8%83%BD%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in Go高性能编程 on subond&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 29 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://www.subond.com/categories/go%E9%AB%98%E6%80%A7%E8%83%BD%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>互斥锁与读写锁的性能对比</title>
      <link>http://www.subond.com/post/005_golang_mutex/</link>
      <pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/005_golang_mutex/</guid>
      <description>互斥锁与读写锁 Go 语言标准包 sync 中提供了两种锁，互斥锁 Mutex 和读写锁</description>
    </item>
    
    <item>
      <title>Go字符串拼接性能对比</title>
      <link>http://www.subond.com/post/006_golang_string_join/</link>
      <pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/006_golang_string_join/</guid>
      <description>Go字符串拼接性能对比 Go 语言中提供了基础数据结构类型 stri</description>
    </item>
    
    <item>
      <title>Go逃逸分析与性能</title>
      <link>http://www.subond.com/post/004_golang_stack_or_heap/</link>
      <pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/004_golang_stack_or_heap/</guid>
      <description>Go 逃逸分析与性能 1、变量与内存 通常每种编程语言都有自己的内存</description>
    </item>
    
    <item>
      <title>Go Slice性能与技巧</title>
      <link>http://www.subond.com/post/003_golang_array_and_slice/</link>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/003_golang_array_and_slice/</guid>
      <description>Go中Slice性能与技巧 一个数组中的所有元素均存放在此数组</description>
    </item>
    
    <item>
      <title>Go 空struct的使用技巧</title>
      <link>http://www.subond.com/post/002_golang_struct_skill/</link>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/002_golang_struct_skill/</guid>
      <description>Go 空struct的使用技巧 1、空struct{}不占用内存空</description>
    </item>
    
    <item>
      <title>Go Struct内存对齐</title>
      <link>http://www.subond.com/post/001_golang_struct_memory_alignment/</link>
      <pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.subond.com/post/001_golang_struct_memory_alignment/</guid>
      <description>Go Struct内存对齐 1 为什么需要考虑内存对齐 CPU访问内存</description>
    </item>
    
  </channel>
</rss>
